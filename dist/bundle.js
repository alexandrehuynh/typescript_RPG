(()=>{"use strict";const e=class{constructor(e,t,n){this.offenseMoves=[],this.defenseMoves=[],this.experiencePoints=0,this.name=e,this._nation=t,this.bendingStyle=n}get nation(){return this._nation}set nation(e){if(!["Earth Kingdom","Water Tribes","Air Temples","Fire Nation","Republic City"].includes(e))throw new Error("Invalid nation.");this._nation=e}learnOffenseMove(e){this.offenseMoves.push(e)}forgetOffenseMove(e){this.offenseMoves=this.offenseMoves.filter((t=>t.name!==e))}learnDefenseMove(e){this.defenseMoves.push(e)}forgetDefenseMove(e){this.defenseMoves=this.defenseMoves.filter((t=>t.name!==e))}attack(){console.log(`${this.name} attacks with ${this.offenseMoves.map((e=>e.attack())).join(", ")}`)}defend(){console.log(`${this.name} defends with ${this.defenseMoves.map((e=>e.defend())).join(", ")}`)}};class t extends e{constructor(e,t,n,r,s){super(e,t,n),this.offenseMoves=r,this.defenseMoves=s}static getInstance(e,n,r,s,i){return t.instance?console.error("There can only be one Avatar."):t.instance=new t(e,n,r,s,i),t.instance}}t.instance=null;const n=t,r=class extends e{constructor(e,t,n,r){super(e,t,"Airbending"),this.offenseMoves=n,this.defenseMoves=r}},s=class extends e{constructor(e,t,n,r){super(e,t,"Earthbending"),this.offenseMoves=n,this.defenseMoves=r}},i=class extends e{constructor(e,t,n,r){super(e,t,"Firebending"),this.offenseMoves=n,this.defenseMoves=r}},o=class extends e{constructor(e,t,n,r){super(e,t,"Waterbending"),this.offenseMoves=n,this.defenseMoves=r}},a=class extends e{constructor(e,t,n,r){super(e,t,"Non-Bender"),this.offenseMoves=n,this.defenseMoves=r}},c=class{static displayCharacter(e,t){const n=document.getElementById(t);if(!n)return void console.error("Container not found");const r=this.createCharacterCard(e);n.innerHTML="",n.appendChild(r)}static createCharacterCard(e){const t=document.createElement("div");return t.className="character-card",t.innerHTML=`\n            <h2>${e.name}</h2>\n            <p>Nation: ${e.nation}</p>\n            <p>Bending Style: ${e.bendingStyle}</p>\n            <p>Abilities: ${e.offenseMoves.map((e=>e.name)).join(", ")}</p>\n        `,t}static displayCharacters(e,t){const n=document.getElementById(t);n&&e.forEach((e=>{const t=this.createCharacterCard(e);n.appendChild(t)}))}};var d,l;let h=null;function u(e){console.log(`populateNations called with characterType: ${e}`);const t=document.getElementById("nation");t?(t.innerHTML="",console.log("Cleared nationSelect options"),({Airbender:["Air Temples","Republic City"],Earthbender:["Earth Kingdom","Republic City"],Firebender:["Fire Nation","Republic City"],Waterbender:["Water Tribes","Republic City"],Nonbender:["Republic City","Earth Kingdom","Fire Nation","Air Temples","Water Tribes"],Avatar:["Republic City","Earth Kingdom","Fire Nation","Air Temples","Water Tribes"]}[e]||[]).forEach((e=>{console.log(`Adding nation: ${e}`);const n=document.createElement("option");n.value=e,n.textContent=e,t.appendChild(n)}))):console.error("nation select element not found")}const m={Airbender:["Air Slices","Vacuum Sphere","Sonic Boom"],Earthbender:["Rock Bullets","Lavabending","Seismic Sense"],Firebender:["Fire Jets","Lightning Generation","Combustion Blast"],Waterbender:["Ice Spears","Water Whip","Bloodbending"],Nonbender:["Chi Blocking","Swordsmanship","Electrified Weapons"],Avatar:["Air Slices","Rock Bullets","Fire Jets","Ice Spears"]},p={Airbender:["Air Shield","Flight","Spiritual Projection"],Earthbender:["Earth Wall","Metal Armor","Sand Cloud"],Firebender:["Fire Shield","Heat Control","Lightning Redirection"],Waterbender:["Healing Waters","Spirit Bending","Water Shield"],Nonbender:["Martial Arts","Smoke Bombs","Shield Use"],Avatar:["Air Shield","Earth Wall","Fire Shield","Water Shield"]};null===(d=document.getElementById("character-type"))||void 0===d||d.addEventListener("change",(e=>{u(e.target.value)})),null===(l=document.getElementById("create-character-btn"))||void 0===l||l.addEventListener("click",(()=>{const e=document.getElementById("character-type"),t=document.getElementById("character-name"),d=document.getElementById("nation");let l="";"Avatar"===e.value&&(l=document.getElementById("bending-style-select").value),function(e,t,d,l){let u=null;switch(e){case"Airbender":u=new r(t,"Republic City"===d?d:"Air Temples",[],[]);break;case"Earthbender":u=new s(t,"Republic City"===d?d:"Earth Kingdom",[],[]);break;case"Firebender":u=new i(t,"Republic City"===d?d:"Fire Nation",[],[]);break;case"Waterbender":u=new o(t,"Republic City"===d?d:"Water Tribes",[],[]);break;case"Nonbender":u=new a(t,d,[],[]);break;case"Avatar":if(h)return void console.error("An Avatar already exists.");h=n.getInstance(t,d,l,[],[]),u=h}const f=document.getElementById("avatar-state-section");f?f.style.display="Avatar"===e?"block":"none":console.error("Avatar state section element not found."),u&&c.displayCharacter(u,"character-display"),function(e){var t;const n=document.getElementById("offense-moves");n.innerHTML="",(null!==(t=m[e])&&void 0!==t?t:[]).forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,n.appendChild(t)}))}(e),function(e){var t;const n=document.getElementById("defense-moves");n.innerHTML="",(null!==(t=p[e])&&void 0!==t?t:[]).forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,n.appendChild(t)}))}(e)}(e.value,t.value,d.value,l)})),document.addEventListener("DOMContentLoaded",(()=>{u(document.getElementById("character-type-select").value)}))})();