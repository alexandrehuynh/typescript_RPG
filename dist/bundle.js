(()=>{"use strict";const e=class{constructor(e,t,n){this.offenseMoves=[],this.defenseMoves=[],this.experiencePoints=0,this.name=e,this._nation=t,this.bendingStyle=n}get nation(){return this._nation}set nation(e){if(!["Earth Kingdom","Water Tribes","Air Temples","Fire Nation","Republic City"].includes(e))throw new Error("Invalid nation.");this._nation=e}learnOffenseMove(e){this.offenseMoves.push(e)}forgetOffenseMove(e){this.offenseMoves=this.offenseMoves.filter((t=>t.name!==e))}learnDefenseMove(e){this.defenseMoves.push(e)}forgetDefenseMove(e){this.defenseMoves=this.defenseMoves.filter((t=>t.name!==e))}attack(){console.log(`${this.name} attacks with ${this.offenseMoves.map((e=>e.attack())).join(", ")}`)}defend(){console.log(`${this.name} defends with ${this.defenseMoves.map((e=>e.defend())).join(", ")}`)}};class t extends e{constructor(e,t,n,r,a){super(e,t,n),this.offenseMoves=r,this.defenseMoves=a}static getInstance(e,n,r,a,s){return t.instance?console.error("There can only be one Avatar."):t.instance=new t(e,n,r,a,s),t.instance}}t.instance=null;const n=t,r=class extends e{constructor(e,t,n,r){super(e,t,"Airbending"),this.offenseMoves=n,this.defenseMoves=r}},a=class extends e{constructor(e,t,n,r){super(e,t,"Earthbending"),this.offenseMoves=n,this.defenseMoves=r}},s=class extends e{constructor(e,t,n,r){super(e,t,"Firebending"),this.offenseMoves=n,this.defenseMoves=r}},o=class extends e{constructor(e,t,n,r){super(e,t,"Waterbending"),this.offenseMoves=n,this.defenseMoves=r}},i=class extends e{constructor(e,t,n,r){super(e,t,"Non-Bender"),this.offenseMoves=n,this.defenseMoves=r}},c=class{static displayCharacter(e,t){console.log("Attempting to display character:",e);const n=document.getElementById(t);if(!n)return void console.error("Container not found for ID:",t);console.log(`Found container for ID ${t}`,n);const r=this.createCharacterCard(e);n.innerHTML="",n.appendChild(r)}static createCharacterCard(e){const t=document.createElement("div");return t.className="character-card",t.innerHTML=`\n            <h2>${e.name}</h2>\n            <p>Nation: ${e.nation}</p>\n            <p>Bending Style: ${e.bendingStyle}</p>\n            <p>Abilities: ${e.offenseMoves.map((e=>e.name)).join(", ")} / ${e.defenseMoves.map((e=>e.name)).join(", ")}</p>\n        `,t}static displayCharacters(e,t){const n=document.getElementById(t);n&&(n.innerHTML="",e.forEach((e=>{const t=this.createCharacterCard(e);n.appendChild(t)})))}};var l,d;let h=null;function u(e){const t=document.getElementById("nation");t?(t.innerHTML="",({Airbender:["Air Temples","Republic City"],Earthbender:["Earth Kingdom","Republic City"],Firebender:["Fire Nation","Republic City"],Waterbender:["Water Tribes","Republic City"],Nonbender:["Republic City","Earth Kingdom","Fire Nation","Air Temples","Water Tribes"],Avatar:["Republic City","Earth Kingdom","Fire Nation","Air Temples","Water Tribes"]}[e]||[]).forEach((e=>{const n=document.createElement("option");n.value=e,n.textContent=e,t.appendChild(n)}))):console.error("nation select element not found")}const f={Airbender:["Air Slices","Vacuum Sphere","Sonic Boom"],Earthbender:["Rock Bullets","Lavabending","Seismic Sense"],Firebender:["Fire Jets","Lightning Generation","Combustion Blast"],Waterbender:["Ice Spears","Water Whip","Bloodbending"],Nonbender:["Chi Blocking","Swordsmanship","Electrified Weapons"],Avatar:["Air Slices","Rock Bullets","Fire Jets","Ice Spears"]},m={Airbender:["Air Shield","Flight","Spiritual Projection"],Earthbender:["Earth Wall","Metal Armor","Sand Cloud"],Firebender:["Fire Shield","Heat Control","Lightning Redirection"],Waterbender:["Healing Waters","Spirit Bending","Water Shield"],Nonbender:["Martial Arts","Smoke Bombs","Shield Use"],Avatar:["Air Shield","Earth Wall","Fire Shield","Water Shield"]};null===(l=document.getElementById("character-bending"))||void 0===l||l.addEventListener("change",(e=>{u(e.target.value)}));const v=new class{constructor(){this.characters=[]}addCharacter(e){this.characters.push(e)}removeCharacter(e){this.characters=this.characters.filter((t=>t.name!==e))}updateCharacter(e,t){const n=this.characters.findIndex((t=>t.name===e));-1!==n?this.characters[n]=Object.assign(Object.assign({},this.characters[n]),t):console.warn(`Character with name ${e} not found.`)}findCharacter(e){return this.characters.find((t=>t.name===e))}listCharacters(){return this.characters}};null===(d=document.getElementById("create-character-btn"))||void 0===d||d.addEventListener("click",(e=>{console.log("Create character button clicked"),e.preventDefault();const t=document.getElementById("character-bending"),l=document.getElementById("character-name-input"),d=document.getElementById("nation"),u=t.value;console.log(`Form values - Name: ${l.value}, Nation: ${d.value}, Bending Style: ${u}`);const g=function(e,t,l){console.log(`Handling character selection - Name: ${e}, Nation: ${t}, Bending Style: ${l}`);let d=null;switch(l){case"Airbender":d=new r(e,t,[],[]);break;case"Earthbender":d=new a(e,t,[],[]);break;case"Firebender":d=new s(e,t,[],[]);break;case"Waterbender":d=new o(e,t,[],[]);break;case"Nonbender":d=new i(e,t,[],[]);break;case"Avatar":if(h)return console.error("An Avatar already exists."),null;h=n.getInstance(e,t,l,[],[]),d=h}const u=document.getElementById("avatar-state-section");return u?u.style.display="Avatar"===l?"block":"none":console.error("Avatar state section element not found."),d&&(console.log("Updating UI with the created character"),c.displayCharacter(d,"character-display"),console.log("UI should be updated now")),function(e){var t;const n=document.getElementById("offense-moves");n.innerHTML="",(null!==(t=f[e])&&void 0!==t?t:[]).forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,n.appendChild(t)}))}(l),function(e){var t;const n=document.getElementById("defense-moves");n.innerHTML="",(null!==(t=m[e])&&void 0!==t?t:[]).forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,n.appendChild(t)}))}(l),d}(l.value,d.value,u);g?console.log("Character created successfully:",g):console.log("Failed to create character"),g?(v.addCharacter(g),console.log("Character created:",g),console.log("All characters:",v.listCharacters()),console.log("After adding, characters list:",v.listCharacters())):console.error("Character creation failed.")})),document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("character-bending");e?(u(e.value),e.value="Avatar",u("Avatar")):console.error("Character Bending select element not found")}))})();